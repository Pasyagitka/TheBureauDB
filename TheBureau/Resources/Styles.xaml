<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
                    xmlns:controls="clr-namespace:TheBureau.Controls">
    <Style TargetType="Button" x:Key="DefaultButton">
        <Setter Property="Background" Value="{DynamicResource LogoColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource NiceDarkWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Width" Value="150"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="Auto"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource OptimisticOrangeDarkColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource NiceGrayDisabledColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="DefaultButtonGray">
        <Setter Property="Background" Value="{DynamicResource NiceGrayColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource NiceDarkWhiteColor}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Width" Value="150"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="Auto"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource OptimisticOrangeDarkColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource NiceGrayDisabledColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    

    <HierarchicalDataTemplate x:Key="RequestListForBrigadeTemplate">
        <Border CornerRadius="10" Background="White" Margin="10" Width="800">
            <StackPanel Orientation="Vertical" Margin="5">
                <controls:RequestCard/>
                <Separator Width="500" Background="Orange"/>
                <Border CornerRadius="5" Background="{DynamicResource PrimaryLightGrayColor}" Margin="7" Width="675">
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="450"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0" Text="Сменить статус заявки" HorizontalAlignment="Center" Margin="2"></TextBlock>
                            <ComboBox  Grid.Column="0" Grid.Row="1" Margin="5" Height="25" >
                                <ComboBoxItem  Content="В обработке" IsSelected="True" Background="{DynamicResource LightOrangeColor}"/>
                                <ComboBoxItem  Content="В процессе" Background="{DynamicResource LightYellowColor}"/>
                                <ComboBoxItem  Content="Готово" Background="{DynamicResource LightGreenColor}"/>
                            </ComboBox>
                            <CheckBox Grid.Column="1" Grid.RowSpan="2" IsChecked="True" Margin="10">
                                <TextBlock Text="Уведомить клиента"/>
                            </CheckBox>
                            <Button Grid.Column="2" Grid.RowSpan="2" Width="50" Padding="3" Background="White" Margin="10" HorizontalAlignment="Center">
                                <Image Source="Images/check.png"/>
                            </Button>
                        </Grid>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </HierarchicalDataTemplate>

    <Style TargetType="TextBox" x:Key="TextBoxDefault">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>
    
  
        <Style x:Key="ValidationTextBox" TargetType="TextBox" BasedOn="{StaticResource TextBoxDefault}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel>
                            <Grid ToolTip="{Binding Path=/ErrorContent}" DockPanel.Dock="Right" Width="16" Height="16" VerticalAlignment="Center" Margin="3 0 0 0">
                                <Ellipse Width="16" Height="16" Fill="{DynamicResource LightOrangeColor}"/>
                                <Ellipse Width="3" Height="8" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 2 0 0" Fill="White"/>
                                <Ellipse Width="2" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 0 0 2" Fill="White"/>
                            </Grid>
                            <Border BorderBrush="{DynamicResource LightOrangeColor}" BorderThickness="2" CornerRadius="2">
                                <AdornedElementPlaceholder/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
    <Style x:Key="TextBoxValidationTemplateDefault" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{DynamicResource LightOrangeColor}"
                            BorderThickness="0,0,0,2"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <!-- <Border x:Name="border" Background="Transparent" -->
                    <!--         BorderBrush="{DynamicResource LightOrangeColor}" BorderThickness="2" CornerRadius="2"/> -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource LightOrangeColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource LightOrangeColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <Grid ToolTip="{Binding Path=/ErrorContent}" DockPanel.Dock="Right" Width="16" Height="16" VerticalAlignment="Center" Margin="3 0 0 0">
                            <Ellipse Width="16" Height="16" Fill="{DynamicResource LightOrangeColor}"/>
                            <Ellipse Width="3" Height="8" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 2 0 0" Fill="White"/>
                            <Ellipse Width="2" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 0 0 2" Fill="White"/>
                        </Grid>
                        <Border BorderBrush="{DynamicResource LightOrangeColor}" BorderThickness="2,2,2,0.5" CornerRadius="2">
                            <AdornedElementPlaceholder/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

</ResourceDictionary>